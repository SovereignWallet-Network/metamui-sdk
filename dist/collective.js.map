{"version":3,"sources":["../src/collective.ts"],"names":[],"mappings":"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","file":"collective.js","sourcesContent":["import * as did from './did';\nimport { buildConnection } from './connection';\nimport { ApiPromise } from '@polkadot/api'\nimport { KeyringPair } from '@polkadot/keyring/types';\nimport { submitTransaction } from './common/helper';\n\n/**\n * Set Members and prime of collective pallet\n * @param  {Array<string>} newMembers Array of Did\n * @param  {string} prime Did of Prime\n * @param  {Number} oldCount Old members count\n * @param  {KeyringPair} signingKeypair Key pair of Sender\n * @param  {ApiPromise} api Network Provider\n * @returns {Object} Transaction Object\n */\nasync function setMembers(newMembers: string[], prime: string, oldCount: number, signingKeypair: KeyringPair, api: ApiPromise) {\n  const provider = api || await buildConnection('local');\n  newMembers = newMembers.map(newMember => did.sanitiseDid(newMember));\n  prime = prime ? did.sanitiseDid(prime) : null;\n  const tx = provider.tx.sudo.sudo(\n    provider.tx.council.setMembers(newMembers, prime, oldCount)\n  );\n  let nonce = await provider.rpc.system.accountNextIndex(signingKeypair.address);\n  const signedTx = await tx.signAsync(signingKeypair, { nonce });\n  return submitTransaction(signedTx, provider);\n}\n\n\n/**\n * To create a proposal\n * @param  {Number} threshold Threshold to successfull execution\n * @param  {Call} proposal Call to propose\n * @param  {Number} lengthCount Length of call\n * @param  {KeyringPair} signingKeypair Key pair of sender\n * @param  {ApiPromise} api Network Provider\n * @returns {Object} Transaction Object\n */\nasync function propose(threshold, proposal, lengthCount, signingKeypair, api: ApiPromise) {\n  const provider = api || await buildConnection('local');\n  const tx = provider.tx.council.propose(threshold, proposal, lengthCount);\n  let nonce = await provider.rpc.system.accountNextIndex(signingKeypair.address);\n  const signedTx = await tx.signAsync(signingKeypair, { nonce });\n  return submitTransaction(signedTx, provider);\n}\n\n/**\n * To Execute a call\n * @param  {Call} proposal Call to propose\n * @param  {Number} lengthCount Length of Call\n * @param  {KeyringPair} signingKeypair Key pair of sender\n * @param  {ApiPromise} api Network Provider\n * @returns {Object} Transaction Object\n */\nasync function execute(proposal, lengthCount, signingKeypair: KeyringPair, api: ApiPromise) {\n  const provider = api || await buildConnection('local');\n  const tx = provider.tx.council.execute(proposal, lengthCount);\n  let nonce = await provider.rpc.system.accountNextIndex(signingKeypair.address);\n  const signedTx = await tx.signAsync(signingKeypair, { nonce });\n  return submitTransaction(signedTx, provider);\n}\n\n/**\n * Vote on a proposal\n * @param  {string} proposalHash Hash of proposal\n * @param  {Number} index Proposal index\n * @param  {Boolean} approve True/false\n * @param  {KeyringPair} signingKeypair Key pair of sender\n * @param  {ApiPromise} api Network Provider\n * @returns {Object} Transaction Object\n */\nasync function vote(proposalHash, index, approve, signingKeypair: KeyringPair, api: ApiPromise) {\n  const provider = api || await buildConnection('local');\n  const tx = provider.tx.council.vote(proposalHash, index, approve);\n  let nonce = await provider.rpc.system.accountNextIndex(signingKeypair.address);\n  const signedTx = await tx.signAsync(signingKeypair, { nonce });\n  return submitTransaction(signedTx, provider);\n}\n\n/**\n * Close a proposal manually, executes call if yes votes is greater than or equal to threshold\n * @param  {string} proposalHash Hash\n * @param  {Number} index Proposal index\n * @param  {Boolean} proposalWeightBond Weight\n * @param  {Number} lengthCount Length\n * @param  {KeyringPair} signingKeypair Key pair of sender\n * @param  {ApiPromise} api Network Provider\n * @returns {Object} Transaction Object\n */\nasync function close(proposalHash, index, proposalWeightBond, lengthCount, signingKeypair: KeyringPair, api: ApiPromise) {\n  const provider = api || await buildConnection('local');\n  const tx = provider.tx.council.close(proposalHash, index, proposalWeightBond, lengthCount);\n  let nonce = await provider.rpc.system.accountNextIndex(signingKeypair.address);\n  const signedTx = await tx.signAsync(signingKeypair, { nonce });\n  return submitTransaction(signedTx, provider);\n}\n\n/**\n * Disapprove proposal\n * @param  {string} proposalHash Hash\n * @param  {KeyringPair} signingKeypair Key pair of sender\n * @param  {ApiPromise} api Network Provider\n * @returns {Object} Transaction Object\n */\nasync function disapproveProposal(proposalHash, signingKeypair: KeyringPair, api: ApiPromise) {\n  const provider = api || await buildConnection('local');\n  const tx = provider.tx.sudo.sudo(\n    provider.tx.council.disapproveProposal(proposalHash)\n  );\n  let nonce = await provider.rpc.system.accountNextIndex(signingKeypair.address);\n  const signedTx = await tx.signAsync(signingKeypair, { nonce });\n  return submitTransaction(signedTx, provider);\n}\n/**\n * Get Members of Council\n * @param  {ApiPromise} api Network Provider\n */\nasync function getMembers(api: ApiPromise) {\n  const provider = api || (await buildConnection('local'));\n  return (await provider.query.council.members()).toJSON();\n}\n/**\n * Get Prime of Council\n * @param  {ApiPromise} api Network Provider\n */\nasync function getPrime(api: ApiPromise) {\n  const provider = api || (await buildConnection('local'));\n  return (await provider.query.council.prime()).toJSON();\n}\n/**\n * Get All Proposals\n * @param  {ApiPromise} api Network Provider\n */\nasync function getProposals(api: ApiPromise) {\n  const provider = api || (await buildConnection('local'));\n  return (await provider.query.council.proposals()).toJSON();\n}\n/**\n * Get Proposal of given hash\n * @param {Hash} proposalHash Hash of proposal\n * @param  {ApiPromise} api Network Provider\n */\nasync function getProposalOf(proposalHash: string, api: ApiPromise) {\n  const provider = api || (await buildConnection('local'));\n  return (await provider.query.council.proposalOf(proposalHash)).toJSON();\n}\n/**\n * Get Votes of given proposal hash\n * @param {Hash} proposalHash Hash of proposal\n * @param  {ApiPromise} api Network Provider\n */\nasync function getVotes(proposalHash: string, api: ApiPromise) {\n  const provider = api || (await buildConnection('local'));\n  return (await provider.query.council.voting(proposalHash)).toJSON();\n}\n/**\n * Get Total proposals count\n * @param  {ApiPromise} api Network Provider\n */\nasync function getProposalCount(api: ApiPromise) {\n  const provider = api || (await buildConnection('local'));\n  return (await provider.query.council.proposalCount()).toJSON();\n}\n\nexport {\n  setMembers,\n  propose,\n  execute,\n  vote,\n  close,\n  disapproveProposal,\n  getMembers,\n  getPrime,\n  getProposals,\n  getProposalOf,\n  getVotes,\n  getProposalCount,\n}"]}